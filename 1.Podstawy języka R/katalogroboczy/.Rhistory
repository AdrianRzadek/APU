install.packages("rvest")
install.packages("dplyr")
install.packages("ahp")
library(rvest)
library(dplyr)
library(ahp)
library(rvest)
library(dplyr)
library(ahp)
# Pobieranie danych ze strony RTV Euro AGD
url <- "http://www.euro.com.pl/telefony-komorkowe.bhtml"
webpage <- read_html(url)
# Wyodrębnianie nazw modeli iPhone
models <- webpage %>% html_nodes(".product-name") %>% html_text()
# Wyodrębnianie cen modeli iPhone
prices <- webpage %>% html_nodes(".price") %>% html_text()
# Przygotowanie ramki danych
smartphones <- data.frame(
Model = models,
Price = prices,
stringsAsFactors = FALSE
)
#Zadanie dotyczy podejmowania decyzji przy kupowaniu urządzeń RTV AGD. Używając metody AHP
#opracować plik w języku R oraz plik AHP danych wejściowych z wykorzystaniem odpowiednich paczek.
#Podjąć decyzję o zakupie smartfonu iPhone z czterordzeniowym procesorem architektury 64-bit dla klienta.
#Dla klienta udało się określić cztery kryteria, które powinny służyć ocenie smartfona: wydajność, jakość, styl, cena.
#Na podstawie względnej ważności poszczególnych kryteriów wybrać dla klienta smartfona. Uwzględniamy następujące dane:
#wyświetlacz, pamięć RAM i pamięć wbudowaną, aparat foto, cena, komunikacja (WiFi itp.).
#Dane (10 smartfonów) pobrać ze strony http://www.euro.com.pl.
# Instalacja i załadowanie niezbędnych pakietów
install.packages("rvest")
install.packages("dplyr")
install.packages("ahp")
library(rvest)
library(dplyr)
library(ahp)
url <- "http://www.euro.com.pl/telefony-komorkowe.bhtml"
webpage <- read_html(url)
library(rvest)
library(dplyr)
library(ahp)
url <- "http://www.euro.com.pl/telefony-komorkowe.bhtml"
webpage <- read_html(url)
models <- webpage %>% html_nodes(".product-name") %>% html_text()
prices <- webpage %>% html_nodes(".price") %>% html_text()
smartphones <- data.frame(
Model = models,
Price = prices,
stringsAsFactors = FALSE
)
smartphones <- data.frame(
Model = models,
Price = prices,
)
smartphones <- data.frame(
Model = models,
Price = prices
)
# Sprawdzenie liczby zebranych modeli i cen
cat("Number of models:", length(models), "\n")
cat("Number of prices:", length(prices), "\n")
# Przygotowanie ramki danych, upewniając się, że liczba wierszy jest zgodna
if (length(models) == length(prices) && length(models) > 0) {
smartphones <- data.frame(
Model = models,
Price = prices,
stringsAsFactors = FALSE
)
} else {
stop("Liczba modeli i cen jest różna lub brak danych")
}
prices <- webpage %>% html_nodes(".price") %>% html_text()
print(prices)
# Install and load the necessary packages
install.packages("ahp")
library(ahp)
ahp_model <- ahp(
hierarchy = list(
goal = "Wybór najlepszego iPhone'a",
criteria = c("Wydajność", "Jakość", "Styl", "Cena"),
alternatives = c("iPhone_15_Pro_256GB", "iPhone_15_Pro_1TB", "iPhone_14_Pro_128GB",
"iPhone_13_128GB", "iPhone_15_Plus_256GB", "iPhone_15_Plus_512GB",
"iPhone_14_Plus_128GB", "iPhone_11_128GB")
),
comparisons = list(
# Comparisons for criteria
criteria = matrix(c(1, 3, 5, 7,
1/3, 1, 3, 5,
1/5, 1/3, 1, 3,
1/7, 1/5, 1/3, 1), nrow = 4, byrow = TRUE),
# Comparisons for alternatives under each criterion
Wydajność = matrix(c(...), nrow = 8, byrow = TRUE),
Jakość = matrix(c(...), nrow = 8, byrow = TRUE),
Styl = matrix(c(...), nrow = 8, byrow = TRUE),
Cena = matrix(c(...), nrow = 8, byrow = TRUE)
)
)
install.packages("ahp")
library(ahp)
# Install and load the necessary packages
install.packages("devtools")
library("devtools")
install.packages("ahp")
library(ahp)
install.packages("devtools")
nazwa <- c("Smartfon Motorola edge 40 neo", "Motorola2", "Motorola3","Motorola4","Motorola5","Motorola6","Motorola7","Motorola8","Motorola9", "Motorola10")
wyswietlacz <- c(6.55,2,3,4,5,6,7,8,9,10)
pamiec_RAM <- c(12,2,3,4,5,6,7,8,9,10)
pamiec_wbudowana <- c(256,2,3,4,5,6,7,8,9,10)
aparat_foto <- c("50 Mpix + 13 Mpix",2,3,4,5,6,7,8,9,10)
cena <- c(1699,200,300,400,500,600,700,800,900,1000)
liczba_opinii <- c(134,20,30,40,50,60,70,80,90,100)
smartfony <- data.frame(nazwa, wyswietlacz,pamiec_RAM, pamiec_wbudowana, aparat_foto,cena, liczba_opinii)
print(smartfony)
srednia_cena <- mean(smartfony$cena)
print(srednia_cena)
# a) Obliczenia
a <- 12 / exp(12)
b <- 2 * a
wieksza <- function(a, b) {
if (a > b) {
return("Wartosc a jest wieksza.")
} else if (a < b) {
return("Wartosc b jest wieksza.")
} else {
return("Obie wartosci sa rowne.")
}
}
wynik <- wieksza(a, b)
print(wynik)
# b) Uruchomienie i dokumentacja funkcji sqrt()
?sqrt()
# c) Stworz wektor a zawierajacy liczby od 80 do 90. Policz sume kwadratow liczb zawartych w wektorze.
a <- 80:90
suma_kwadratow <- sum(a^2)
print(paste("Suma kwadratow liczb w wektorze a:", suma_kwadratow))
# d) Wyswietl wszystkie funkcje zawierajace fraze˛ max w swojej nazwie.
apropos("max")
# e) Ustaw dowolny katalog roboczy. Nastepnie stworz zmienna˛ a zawierajaca˛ lancuch znakow “smartfon Motorola”. Zapisz zmienna˛
#a z obszaru roboczego do pliku w katalogu roboczym. Nastepnie usun zmienna˛ a. Sprawdz wartosc zmiennej a (powinno jej brakowac).
#Na koncu wczytaj plik ze zmienna a i sprawdz jej wartosc.
setwd("./katalogroboczy")
a <- "smartfon Motorola"
save(a, file = "a.RData")
rm(a)
load("a.RData")
# f) Zainstaluj i zaladuj pakiet gridExtra, ktory umozliwia m.in ładną
#wizualizacje danych tabelarycznych. Nastepnie przy pomocy dokumentacji pakietu znajdz funkcje do wizualizacji danych tabelarycznych.
#Uzyj jej na pierwszych 10 wierszach zbioru danych Titanic.
install.packages("gridExtra")
library(gridExtra)
?gridExtra
library(grid)
?grid
Titanic1 <- head(as.data.frame(Titanic), 10)
TT <- tableGrob(Titanic1)
grid.draw(TT)
# (g) Tworzenie wektora zawierającego ciąg liczb 400, 392, 384, ..., 320
wektor <- seq(400,320, by = -8)
print(wektor)
# h)Stwórz wektor a z liczbami od 60 do 40 oraz wektor b z liczbami od 40 do 50. Utwórz nowy wektor d będący połączeniem wektorów b i a
#(w takiej kolejności). Wyświetl go.
a <- 60:40
b <- 40:50
d <- c(b, a)
print(d)
# i) Stwórz wektor nazwa zawierający nazwy 10 smartfonów Motorola. Następnie stwórz wektory wyswietlacz, pamiec_RAM, pamiec_wbudowana,
#aparat_foto, cena, liczba_opinii zawierające dane 10 smartfonów. Utwórz ramkę danych smartfony z wektorów wyswietlacz, pamiec_RAM,
#pamiec_wbudowana, aparat_foto, cena, liczba_opinii. Wylicz średnią cenę smartfonów.
nazwa <- c("Smartfon Motorola edge 40 neo", "Smartfon Motorola moto G82 ", "Smartfon Motorola moto G72","Smartfon Motorola moto G60","Smartfon Motorola moto g23","Smartfon Motorola edge 30 ultra ","Smartfon Motorola edge 30 neo ","Smartfon Motorola moto g200","Smartfon Motorola edge 40 neo ", "Smartfon Motorola moto g31")
wyswietlacz <- c(6.55,6.6,6.6,6.78,6.5,6.67,6.28,6.8,6.55,6.4)
pamiec_RAM <- c(12,6,8,6,4,12,8,8,12,4)
pamiec_wbudowana <- c(256,128,128,128,128,256,128,128,256,64)
aparat_foto <- c("50 Mpix","50 Mpix","108 Mpix","108 Mpix","50 Mpix","64 Mpix","108 Mpix","108 Mpix","50 Mpix","50 Mpix")
cena <- c(1699,899,599,499,799,2999,799,899,1699,299)
liczba_opinii <- c(134,174,168,123,87,80,80,84,72,72)
smartfony <- data.frame(nazwa, wyswietlacz,pamiec_RAM, pamiec_wbudowana, aparat_foto,cena, liczba_opinii)
print(smartfony)
srednia_cena <- mean(smartfony$cena)
print(srednia_cena)
# j) Do stworzonej w poprzednim zadaniu ramki danych smartfony dodaj wpis zawierający dane nowego smartfonu.
#Wylicz średnią cenę ponownie.
nowy_smartfon <- data.frame(nazwa = "Smartfon Motorola Moto G52",
wyswietlacz = 6.6,
pamiec_RAM = 6,
pamiec_wbudowana = 256,
aparat_foto = "50 Mpix",
cena = 699,
liczba_opinii = 50)
smartfony <- rbind(smartfony, nowy_smartfon)
print(smartfony)
srednia_cena <- mean(smartfony$cena)
print(srednia_cena)
# k) Korzystając z ramki danych smartfony, dodaj nową kolumnę ocena_klientow określającą ocenę klientów w skali od 0 do 5 z krokiem 0.5.
#Kolumna powinna automatycznie przekonwertować się do cech jakościowych (factors). Wylicz średnią cenę dla każdej oceny.
ocena_klientow <- c(4.5,2,4,3.5,5,3,4.5,4,1,4.5,1.5)
smartfony$ocena_klientow <- factor(ocena_klientow, levels = seq(1, 5, by = 0.5))
srednia_cena_oceny <- aggregate(cena ~ ocena_klientow, data = smartfony, FUN = mean)
print(srednia_cena_oceny)
#(l) Do ramki danych smartfony dodaj kolejne 4 smartfony.
#Narysuj na wykresie słupkowym liczebność reprezentantów każdej z ocen klientów (pakiet plotrix).
#install.packages("plotrix")
library(plotrix)
nowe_smartfony <- data.frame(nazwa = c('Smartfon Motorola moto g54 power edition ', 'Smartfon Motorola moto g54 power edition', 'Smartfon Motorola moto G84 5G', 'Smartfon Motorola edge 30 Pro 12'),
wyswietlacz = c(6.5, 6.5, 6.5, 6.7),
pamiec_RAM = c(12, 12, 12, 12),
pamiec_wbudowana = c(256, 256, 256, 256),
aparat_foto = c('50 Mpix', '50 Mpix', '50 Mpix', '50 Mpix'),
cena = c(1000, 1000, 1300, 4050),
liczba_opinii = c(16, 15, 14, 14),
ocena_klientow = c(1,2,3,4.5))
smartfony <- rbind(smartfony, nowe_smartfony)
print(smartfony)
barplot(table(smartfony$ocena_klientow), main = "Liczebność ocen klientów", xlab = "Ocena", ylab = "Liczba smartfonów")
#(m) Wykorzystując ramkę danych smartfony, pokaż procentowy udział każdej oceny przy pomocy wykresu kołowego oraz wachlarzowego (pakiet plotrix).
oceny_procent <- round(prop.table(table(smartfony$ocena_klientow)) * 100, 1)
pie(oceny_procent, main = "Procentowy udział ocen klientów", col = rainbow(length(oceny_procent)))
oceny_liczbowe <- as.numeric(as.character(smartfony$ocena_klientow))
tabela_ocen <- table(oceny_liczbowe)
percentage <- table(oceny_liczbowe) / length(oceny_liczbowe)
fan.plot(percentage, labels = names(percentage), main = "Procentowy udział ocen klientów")
#(n) Do ramki danych smartfony dodaj nową kolumnę status_opinii z wartościami: „nie ma”, „mniej 50 opinii”, "50-100 opinii", "więcej 100 opinii" w zależności od liczby opinii.
#Zamień dodaną kolumnę na cechy jakościowe. Przy pomocy wykresu kołowego wyrysuj procentowy udział smartfonów o konkretnym statusie opinii.
smartfony$liczba_opinii <- as.numeric(smartfony$liczba_opinii)
smartfony$status_opinii <- cut(smartfony$liczba_opinii,
breaks = c(-Inf, 0, 50, 100, Inf),
labels = c("nie ma", "mniej 50 opinii", "50-100 opinii", "więcej 100 opinii"))
smartfony$status_opinii <- as.factor(smartfony$status_opinii)
pie(table(smartfony$status_opinii), main = "Procentowy udział statusów opinii", col = rainbow(length(table(smartfony$status_opinii))))
#(o) Wykorzystując ramkę danych smartfony, stwórz zdanie o każdym ze smartfonów postaci:
#nazwa + " ma ocenę klientów " + ocena_klientow + " bo ma liczbę opinii " + liczba_opinii. Plus oznacza konkatenację łańcuchów i wartości.
zadanie <- paste(smartfony$ceny, "ma ocene klientow", smartfony$ocena_klientow, "ma liczbe opinii", smartfony$liczba_opinii)
print(zadanie)
#(p)Zachowaj ramkę danych w pliku .csv. Załaduj ramkę danych z pliku .csv.
write.csv(smartfony,"smartfony.csv", row.names = FALSE)
smartfonycsv <- read.csv("smartfony.csv")
print(smartfonycsv)
View(nowe_smartfony)
View(nowy_smartfon)
View(nowe_smartfony)
View(webpage)
save.image("C:/Users/adria/Desktop/APU/katalogroboczy/1.RData")
View(wieksza)
View(nowe_smartfony)
View(nowy_smartfon)
View(smartfony)
View(smartfonycsv)
View(smartfony)
View(smartfonycsv)
View(srednia_cena_oceny)
View(Titanic1)
View(TT)
